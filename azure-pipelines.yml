jobs:
- job: SyncRepo
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: 'git branch -r | findstr /v "\->" |  ForEach-Object {$br=$_.TrimStart(); git branch --track $br.TrimStart("origin/") $br}
        $repoName = "$env:BUILD_REPOSITORY_NAME".split(''/'')[1]
        $repoUri = "$env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI".Substring(8)+ "_git/$repoName"
        git remote add vsts "https://$env:SYSTEM_ACCESSTOKEN@$repoUri"
        git branch -r | findstr /v "\->" |  ForEach-Object { $br=$_.TrimStart("  origin/"); git push -u vsts $br }'
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: bash build.sh
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'build'
      ArtifactName: '$(Agent.OS).$(Agent.OSArchitecture)'
      publishLocation: 'Container'
  
- job: macOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: bash build.sh
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'build'
      ArtifactName: '$(Agent.OS).$(Agent.OSArchitecture)'
      publishLocation: 'Container'
    

- job: Windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - script: 'cmake .'
  - task: MSBuild@1
    inputs:
      solution: '**/*.sln'
      configuration: 'Debug'
      maximumCpuCount: true
  - task: MSBuild@1
    inputs:
      solution: '**/*.sln'
      configuration: 'Release'
      maximumCpuCount: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'build'
      ArtifactName: '$(Agent.OS).$(Agent.OSArchitecture)'
      publishLocation: 'Container'
